[{"id":0,"href":"/quickstart/","title":"Getting Started","parent":"HonuDB Documentation","content":" Coming Soon We\u0026rsquo;re still in development\nHonuDB is still in an Alpha development phase and is not ready for prime time use. We\u0026rsquo;re excited that you\u0026rsquo;re excited to try it out; if you\u0026rsquo;re willing to be a Beta tester, please get in contact with us! ","description":" Coming Soon We\u0026rsquo;re still in development\nHonuDB is still in an Alpha development phase and is not ready for prime time use. We\u0026rsquo;re excited that you\u0026rsquo;re excited to try it out; if you\u0026rsquo;re willing to be a Beta tester, please get in contact with us! "},{"id":1,"href":"/architecture/data-model/","title":"Data Model","parent":"Architecture","content":"The database engine manages the data as key/value pairs on disk such that the keys are ordered in byte-sort order for fast iteration. Generally speaking the engine uses an LSM-Tree (log structured merge tree) or similar structure for fast appends to the database and routine compaction and merging.\nThe layout of the keys and the data objects are important to understand.\nByte Layout of Keys ","description":"The database engine manages the data as key/value pairs on disk such that the keys are ordered in byte-sort order for fast iteration. Generally speaking the engine uses an LSM-Tree (log structured merge tree) or similar structure for fast appends to the database and routine compaction and merging.\nThe layout of the keys and the data objects are important to understand.\nByte Layout of Keys "},{"id":2,"href":"/posts/","title":"News","parent":"HonuDB Documentation","content":"","description":""},{"id":3,"href":"/contributing/","title":"Contributing","parent":"HonuDB Documentation","content":"HonuDB is an open source project that is supported by a community who will gratefully accept any contributions you might make to the project. Large or small, any contribution makes a difference! While Rotational Labs funds the development of HonuDB, we have committed to ensuring that HonuDB always remains open source; please rest assured that your contributions build the community and is not simply free work.\nDatabase development is notoriously difficult \u0026ndash; but hopefully contributing to database code is not. For example, the implementation of an algorithm or component can often be accomplished without affecting the rest of the database code. If you\u0026rsquo;re not sure where to start, look for TODO comments in the code or get in touch with us!\nBeyond the code, there are many ways to contribute:\nSubmit a feature request or bug report on our GitHub Issues. Add to the documentation or help us with our website, honudb.dev. Write a blog post, tweet, or share our project with others. Star our [https://go.rtnl.ai/honu] on GitHub! Translate our documentation into another language. Write unit or integration tests for Honu. Tell us about how you\u0026rsquo;re using HonuDB! There are lots of ways to get involved, and we\u0026rsquo;d love to have you be a part of our community.\n","description":"HonuDB is an open source project that is supported by a community who will gratefully accept any contributions you might make to the project. Large or small, any contribution makes a difference! While Rotational Labs funds the development of HonuDB, we have committed to ensuring that HonuDB always remains open source; please rest assured that your contributions build the community and is not simply free work.\nDatabase development is notoriously difficult \u0026ndash; but hopefully contributing to database code is not. For example, the implementation of an algorithm or component can often be accomplished without affecting the rest of the database code. If you\u0026rsquo;re not sure where to start, look for TODO comments in the code or get in touch with us!\n"},{"id":4,"href":"/architecture/","title":"Architecture","parent":"HonuDB Documentation","content":"This section is primarily for contributors and developers of the HonuDB replicated database. In it, we will describe the design principles of the database system, how features are implemented and integrated, and the path towards creating complex systems designed from many simple components.\nDesign Goal\nThe goal of the database is to provide scalable data retrieval both in terms of number of nodes (e.g. scale to 100s of nodes) and amount of data (hundreds of terabytes). In addition to scale, this database provides data access controls, privacy and provenance, and other security related features. Finally, HonuDB provides artifacts and features to support the traning and inferencing model lifecycle. In short, HonuDB is a distributed data governance database for machine learning and artificial intelligence workloads.\nOn This Page\nSystem Diagram Key Terms System Diagram Key Terms Engine A database engine is a component that manages how data is stored and cached on disk. ","description":"This section is primarily for contributors and developers of the HonuDB replicated database. In it, we will describe the design principles of the database system, how features are implemented and integrated, and the path towards creating complex systems designed from many simple components.\nDesign Goal\nThe goal of the database is to provide scalable data retrieval both in terms of number of nodes (e.g. scale to 100s of nodes) and amount of data (hundreds of terabytes). In addition to scale, this database provides data access controls, privacy and provenance, and other security related features. Finally, HonuDB provides artifacts and features to support the traning and inferencing model lifecycle. In short, HonuDB is a distributed data governance database for machine learning and artificial intelligence workloads.\n"},{"id":5,"href":"/tags/Informational/","title":"Informational","parent":"Tags","content":"","description":""},{"id":6,"href":"/posts/2025-02-27-introducing-honudb/","title":"Introducing HonuDB","parent":"News","content":"Why does the world need yet another database? In short, because no one database can support all use cases all the time. HonuDB is for machine learning engineers, a group that needs data management more than most, but is often overlooked as users for database management systems.\nInstead of creating a single purpose tool like a vector database, or augmenting an existing database with vector capabilities like Elastic; HonuDB is focused on the workflow of AI and model development from training datasets to inferencing context.\nThe AI/ML workflow has specialized features that are not generally found together in a single system. To support reproducibility, datasets must be versioned and snapshotted so that training datasets can be mapped to their models, and datasets are a first class access pattern in HonuDB. We also understand how important privacy and data governance is, especially when it comes to AI \u0026ndash; so HonuDB is built to support provenance based investigations and geographic access controls. ML datasets range from the very small to the very large, so HonuDB can operate as a single node or scale to replicate to hundreds of nodes across multiple geographic regions. Finally, vector queries and model context protocols are needed for inferencing, and Honu is ready to support these protocols for RAG workflows.\nHonuDB not only supports AI/ML workflows but uses ML under the hood to improve its performance. Based on the academic papers Anti-Entropy Bandits for Geo-Replicated Consistency and Bilateral Anti-Entropy for Eventual Consitency, HonuDB uses reinforcement learning to optimize replication and consistency in the wide area!\nAlways open-source, we hope HonuDB will accelerate your projects and that you\u0026rsquo;ll enjoy using it as much as we do.\n","description":"Why does the world need yet another database? In short, because no one database can support all use cases all the time. HonuDB is for machine learning engineers, a group that needs data management more than most, but is often overlooked as users for database management systems.\n"},{"id":7,"href":"/tags/","title":"Tags","parent":"HonuDB Documentation","content":"","description":""},{"id":8,"href":"/tags/Updates/","title":"Updates","parent":"Tags","content":"","description":""},{"id":9,"href":"/","title":"HonuDB Documentation","parent":"","content":" The HonuDB Database is the first AI native distributed database intended for an audience of AI developers who need to manage multi-modal datasets with snapshots that can map to models and model training. A replicated document database, HonuDB provides rapid data ingestion and collection management for different mimetypes including JSON, Parquet, images, video, and more. With privacy in mind from the start, HonuDB has data governance features such as provenance and lineage tracking (including by geographic location), and fine-grain access controls. Data scientists and machine learning engineers can rely on Honu to manage small to extremely large datasets replicated over multiple geographic areas.\nGet Started Now! Feature overview Collections \u0026amp; Datasets Collections allow you to manage related data together; Datasets are snapshots of collections that indicate exactly what data was usd to train a model.\nFull Versioning All objects in the database are fully versioned to prevent an update from changing the view of a dataset from a model perspective.\nProvenance Awareness Regions and unique writers are tracked across all updates so you can monitor how data is changing in your system and implement privacy controls.\nSmart Replication Honu uses reinforcement learning anti-entropy to maximize consistency and scale replication to hundreds of nodes without increasing your cloud costs.\nFine-Grain Access Control Collections, objects, and datasets have a hierarchical permission model specifically for AI workloads including training and inferencing permissions.\nModel Context Protocol Honu supports the Model Context Protocol so that you can directly add data to your LLM contexts using semantic similarity indexes.\n","description":" The HonuDB Database is the first AI native distributed database intended for an audience of AI developers who need to manage multi-modal datasets with snapshots that can map to models and model training. A replicated document database, HonuDB provides rapid data ingestion and collection management for different mimetypes including JSON, Parquet, images, video, and more. With privacy in mind from the start, HonuDB has data governance features such as provenance and lineage tracking (including by geographic location), and fine-grain access controls. Data scientists and machine learning engineers can rely on Honu to manage small to extremely large datasets replicated over multiple geographic areas.\n"}]