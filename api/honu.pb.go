// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.26.1
// source: honu/v1/honu.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key       []byte   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Namespace string   `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Options   *Options `protobuf:"bytes,3,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_honu_v1_honu_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_honu_v1_honu_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_honu_v1_honu_proto_rawDescGZIP(), []int{0}
}

func (x *GetRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *GetRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetRequest) GetOptions() *Options {
	if x != nil {
		return x.Options
	}
	return nil
}

type GetReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Meta  *Meta  `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"` // will only be supplied if return_meta=true in options
}

func (x *GetReply) Reset() {
	*x = GetReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_honu_v1_honu_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReply) ProtoMessage() {}

func (x *GetReply) ProtoReflect() protoreflect.Message {
	mi := &file_honu_v1_honu_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReply.ProtoReflect.Descriptor instead.
func (*GetReply) Descriptor() ([]byte, []int) {
	return file_honu_v1_honu_proto_rawDescGZIP(), []int{1}
}

func (x *GetReply) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *GetReply) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type PutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key       []byte   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value     []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Namespace string   `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Options   *Options `protobuf:"bytes,4,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *PutRequest) Reset() {
	*x = PutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_honu_v1_honu_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutRequest) ProtoMessage() {}

func (x *PutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_honu_v1_honu_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutRequest.ProtoReflect.Descriptor instead.
func (*PutRequest) Descriptor() ([]byte, []int) {
	return file_honu_v1_honu_proto_rawDescGZIP(), []int{2}
}

func (x *PutRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *PutRequest) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *PutRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *PutRequest) GetOptions() *Options {
	if x != nil {
		return x.Options
	}
	return nil
}

type PutReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool  `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Meta    *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"` // will only be supplied if return_meta=true in options
}

func (x *PutReply) Reset() {
	*x = PutReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_honu_v1_honu_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutReply) ProtoMessage() {}

func (x *PutReply) ProtoReflect() protoreflect.Message {
	mi := &file_honu_v1_honu_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutReply.ProtoReflect.Descriptor instead.
func (*PutReply) Descriptor() ([]byte, []int) {
	return file_honu_v1_honu_proto_rawDescGZIP(), []int{3}
}

func (x *PutReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PutReply) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type DeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key       []byte   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Namespace string   `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Options   *Options `protobuf:"bytes,3,opt,name=options,proto3" json:"options,omitempty"` // if return_meta=true then the meta of the version deleted is returned
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_honu_v1_honu_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_honu_v1_honu_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_honu_v1_honu_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *DeleteRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DeleteRequest) GetOptions() *Options {
	if x != nil {
		return x.Options
	}
	return nil
}

type DeleteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool  `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Meta    *Meta `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"` // will only be supplied if return_meta=true in options
}

func (x *DeleteReply) Reset() {
	*x = DeleteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_honu_v1_honu_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteReply) ProtoMessage() {}

func (x *DeleteReply) ProtoReflect() protoreflect.Message {
	mi := &file_honu_v1_honu_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteReply.ProtoReflect.Descriptor instead.
func (*DeleteReply) Descriptor() ([]byte, []int) {
	return file_honu_v1_honu_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteReply) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type IterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prefix    []byte   `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"` // the prefix to range over, if nil all objects are returned
	Namespace string   `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Options   *Options `protobuf:"bytes,3,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *IterRequest) Reset() {
	*x = IterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_honu_v1_honu_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IterRequest) ProtoMessage() {}

func (x *IterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_honu_v1_honu_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IterRequest.ProtoReflect.Descriptor instead.
func (*IterRequest) Descriptor() ([]byte, []int) {
	return file_honu_v1_honu_proto_rawDescGZIP(), []int{6}
}

func (x *IterRequest) GetPrefix() []byte {
	if x != nil {
		return x.Prefix
	}
	return nil
}

func (x *IterRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *IterRequest) GetOptions() *Options {
	if x != nil {
		return x.Options
	}
	return nil
}

type IterReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values        []*KVPair `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	NextPageToken string    `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *IterReply) Reset() {
	*x = IterReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_honu_v1_honu_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IterReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IterReply) ProtoMessage() {}

func (x *IterReply) ProtoReflect() protoreflect.Message {
	mi := &file_honu_v1_honu_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IterReply.ProtoReflect.Descriptor instead.
func (*IterReply) Descriptor() ([]byte, []int) {
	return file_honu_v1_honu_proto_rawDescGZIP(), []int{7}
}

func (x *IterReply) GetValues() []*KVPair {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *IterReply) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type BatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to Request:
	//
	//	*BatchRequest_Put
	//	*BatchRequest_Delete
	Request isBatchRequest_Request `protobuf_oneof:"request"`
}

func (x *BatchRequest) Reset() {
	*x = BatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_honu_v1_honu_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchRequest) ProtoMessage() {}

func (x *BatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_honu_v1_honu_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchRequest.ProtoReflect.Descriptor instead.
func (*BatchRequest) Descriptor() ([]byte, []int) {
	return file_honu_v1_honu_proto_rawDescGZIP(), []int{8}
}

func (x *BatchRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (m *BatchRequest) GetRequest() isBatchRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *BatchRequest) GetPut() *PutRequest {
	if x, ok := x.GetRequest().(*BatchRequest_Put); ok {
		return x.Put
	}
	return nil
}

func (x *BatchRequest) GetDelete() *DeleteRequest {
	if x, ok := x.GetRequest().(*BatchRequest_Delete); ok {
		return x.Delete
	}
	return nil
}

type isBatchRequest_Request interface {
	isBatchRequest_Request()
}

type BatchRequest_Put struct {
	Put *PutRequest `protobuf:"bytes,2,opt,name=put,proto3,oneof"`
}

type BatchRequest_Delete struct {
	Delete *DeleteRequest `protobuf:"bytes,3,opt,name=delete,proto3,oneof"`
}

func (*BatchRequest_Put) isBatchRequest_Request() {}

func (*BatchRequest_Delete) isBatchRequest_Request() {}

type BatchReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operations int64               `protobuf:"varint,1,opt,name=operations,proto3" json:"operations,omitempty"`
	Successful int64               `protobuf:"varint,2,opt,name=successful,proto3" json:"successful,omitempty"`
	Failed     int64               `protobuf:"varint,3,opt,name=failed,proto3" json:"failed,omitempty"`
	Errors     []*BatchReply_Error `protobuf:"bytes,4,rep,name=errors,proto3" json:"errors,omitempty"`
}

func (x *BatchReply) Reset() {
	*x = BatchReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_honu_v1_honu_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchReply) ProtoMessage() {}

func (x *BatchReply) ProtoReflect() protoreflect.Message {
	mi := &file_honu_v1_honu_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchReply.ProtoReflect.Descriptor instead.
func (*BatchReply) Descriptor() ([]byte, []int) {
	return file_honu_v1_honu_proto_rawDescGZIP(), []int{9}
}

func (x *BatchReply) GetOperations() int64 {
	if x != nil {
		return x.Operations
	}
	return 0
}

func (x *BatchReply) GetSuccessful() int64 {
	if x != nil {
		return x.Successful
	}
	return 0
}

func (x *BatchReply) GetFailed() int64 {
	if x != nil {
		return x.Failed
	}
	return 0
}

func (x *BatchReply) GetErrors() []*BatchReply_Error {
	if x != nil {
		return x.Errors
	}
	return nil
}

type CursorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prefix    []byte   `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`                  // the prefix to range over, if nil all objects are returned
	SeekKey   []byte   `protobuf:"bytes,2,opt,name=seek_key,json=seekKey,proto3" json:"seek_key,omitempty"` // a key to seekto within the prefix (optional)
	Namespace string   `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Options   *Options `protobuf:"bytes,4,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *CursorRequest) Reset() {
	*x = CursorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_honu_v1_honu_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CursorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CursorRequest) ProtoMessage() {}

func (x *CursorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_honu_v1_honu_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CursorRequest.ProtoReflect.Descriptor instead.
func (*CursorRequest) Descriptor() ([]byte, []int) {
	return file_honu_v1_honu_proto_rawDescGZIP(), []int{10}
}

func (x *CursorRequest) GetPrefix() []byte {
	if x != nil {
		return x.Prefix
	}
	return nil
}

func (x *CursorRequest) GetSeekKey() []byte {
	if x != nil {
		return x.SeekKey
	}
	return nil
}

func (x *CursorRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CursorRequest) GetOptions() *Options {
	if x != nil {
		return x.Options
	}
	return nil
}

type SyncRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to Request:
	//
	//	*SyncRequest_Get
	//	*SyncRequest_Put
	//	*SyncRequest_Delete
	//	*SyncRequest_Iter
	Request isSyncRequest_Request `protobuf_oneof:"request"`
}

func (x *SyncRequest) Reset() {
	*x = SyncRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_honu_v1_honu_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncRequest) ProtoMessage() {}

func (x *SyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_honu_v1_honu_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncRequest.ProtoReflect.Descriptor instead.
func (*SyncRequest) Descriptor() ([]byte, []int) {
	return file_honu_v1_honu_proto_rawDescGZIP(), []int{11}
}

func (x *SyncRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (m *SyncRequest) GetRequest() isSyncRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *SyncRequest) GetGet() *GetRequest {
	if x, ok := x.GetRequest().(*SyncRequest_Get); ok {
		return x.Get
	}
	return nil
}

func (x *SyncRequest) GetPut() *PutRequest {
	if x, ok := x.GetRequest().(*SyncRequest_Put); ok {
		return x.Put
	}
	return nil
}

func (x *SyncRequest) GetDelete() *DeleteRequest {
	if x, ok := x.GetRequest().(*SyncRequest_Delete); ok {
		return x.Delete
	}
	return nil
}

func (x *SyncRequest) GetIter() *IterRequest {
	if x, ok := x.GetRequest().(*SyncRequest_Iter); ok {
		return x.Iter
	}
	return nil
}

type isSyncRequest_Request interface {
	isSyncRequest_Request()
}

type SyncRequest_Get struct {
	Get *GetRequest `protobuf:"bytes,2,opt,name=get,proto3,oneof"`
}

type SyncRequest_Put struct {
	Put *PutRequest `protobuf:"bytes,3,opt,name=put,proto3,oneof"`
}

type SyncRequest_Delete struct {
	Delete *DeleteRequest `protobuf:"bytes,4,opt,name=delete,proto3,oneof"`
}

type SyncRequest_Iter struct {
	Iter *IterRequest `protobuf:"bytes,5,opt,name=iter,proto3,oneof"`
}

func (*SyncRequest_Get) isSyncRequest_Request() {}

func (*SyncRequest_Put) isSyncRequest_Request() {}

func (*SyncRequest_Delete) isSyncRequest_Request() {}

func (*SyncRequest_Iter) isSyncRequest_Request() {}

type SyncReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Success bool   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Error   string `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	// Types that are assignable to Reply:
	//
	//	*SyncReply_Get
	//	*SyncReply_Put
	//	*SyncReply_Delete
	//	*SyncReply_Iter
	Reply isSyncReply_Reply `protobuf_oneof:"reply"`
}

func (x *SyncReply) Reset() {
	*x = SyncReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_honu_v1_honu_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncReply) ProtoMessage() {}

func (x *SyncReply) ProtoReflect() protoreflect.Message {
	mi := &file_honu_v1_honu_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncReply.ProtoReflect.Descriptor instead.
func (*SyncReply) Descriptor() ([]byte, []int) {
	return file_honu_v1_honu_proto_rawDescGZIP(), []int{12}
}

func (x *SyncReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SyncReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SyncReply) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (m *SyncReply) GetReply() isSyncReply_Reply {
	if m != nil {
		return m.Reply
	}
	return nil
}

func (x *SyncReply) GetGet() *GetReply {
	if x, ok := x.GetReply().(*SyncReply_Get); ok {
		return x.Get
	}
	return nil
}

func (x *SyncReply) GetPut() *PutReply {
	if x, ok := x.GetReply().(*SyncReply_Put); ok {
		return x.Put
	}
	return nil
}

func (x *SyncReply) GetDelete() *DeleteReply {
	if x, ok := x.GetReply().(*SyncReply_Delete); ok {
		return x.Delete
	}
	return nil
}

func (x *SyncReply) GetIter() *IterReply {
	if x, ok := x.GetReply().(*SyncReply_Iter); ok {
		return x.Iter
	}
	return nil
}

type isSyncReply_Reply interface {
	isSyncReply_Reply()
}

type SyncReply_Get struct {
	Get *GetReply `protobuf:"bytes,4,opt,name=get,proto3,oneof"`
}

type SyncReply_Put struct {
	Put *PutReply `protobuf:"bytes,5,opt,name=put,proto3,oneof"`
}

type SyncReply_Delete struct {
	Delete *DeleteReply `protobuf:"bytes,6,opt,name=delete,proto3,oneof"`
}

type SyncReply_Iter struct {
	Iter *IterReply `protobuf:"bytes,7,opt,name=iter,proto3,oneof"`
}

func (*SyncReply_Get) isSyncReply_Reply() {}

func (*SyncReply_Put) isSyncReply_Reply() {}

func (*SyncReply_Delete) isSyncReply_Reply() {}

func (*SyncReply_Iter) isSyncReply_Reply() {}

type CountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prefix    []byte `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`                  // the prefix to range over, if nil all objects are counted
	SeekKey   []byte `protobuf:"bytes,2,opt,name=seek_key,json=seekKey,proto3" json:"seek_key,omitempty"` // a key to seekto within the prefix (optional)
	Namespace string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *CountRequest) Reset() {
	*x = CountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_honu_v1_honu_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountRequest) ProtoMessage() {}

func (x *CountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_honu_v1_honu_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountRequest.ProtoReflect.Descriptor instead.
func (*CountRequest) Descriptor() ([]byte, []int) {
	return file_honu_v1_honu_proto_rawDescGZIP(), []int{13}
}

func (x *CountRequest) GetPrefix() []byte {
	if x != nil {
		return x.Prefix
	}
	return nil
}

func (x *CountRequest) GetSeekKey() []byte {
	if x != nil {
		return x.SeekKey
	}
	return nil
}

func (x *CountRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type CountReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Objects     uint64 `protobuf:"varint,1,opt,name=objects,proto3" json:"objects,omitempty"`                            // the number of objects in the iterator
	KeyBytes    uint64 `protobuf:"varint,2,opt,name=key_bytes,json=keyBytes,proto3" json:"key_bytes,omitempty"`          // the number of bytes used for keys
	ObjectBytes uint64 `protobuf:"varint,3,opt,name=object_bytes,json=objectBytes,proto3" json:"object_bytes,omitempty"` // the number of bytes used for objects
}

func (x *CountReply) Reset() {
	*x = CountReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_honu_v1_honu_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountReply) ProtoMessage() {}

func (x *CountReply) ProtoReflect() protoreflect.Message {
	mi := &file_honu_v1_honu_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountReply.ProtoReflect.Descriptor instead.
func (*CountReply) Descriptor() ([]byte, []int) {
	return file_honu_v1_honu_proto_rawDescGZIP(), []int{14}
}

func (x *CountReply) GetObjects() uint64 {
	if x != nil {
		return x.Objects
	}
	return 0
}

func (x *CountReply) GetKeyBytes() uint64 {
	if x != nil {
		return x.KeyBytes
	}
	return 0
}

func (x *CountReply) GetObjectBytes() uint64 {
	if x != nil {
		return x.ObjectBytes
	}
	return 0
}

type HealthCheck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HealthCheck) Reset() {
	*x = HealthCheck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_honu_v1_honu_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheck) ProtoMessage() {}

func (x *HealthCheck) ProtoReflect() protoreflect.Message {
	mi := &file_honu_v1_honu_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheck.ProtoReflect.Descriptor instead.
func (*HealthCheck) Descriptor() ([]byte, []int) {
	return file_honu_v1_honu_proto_rawDescGZIP(), []int{15}
}

type ServerStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  string         `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Version string         `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Uptime  string         `protobuf:"bytes,3,opt,name=uptime,proto3" json:"uptime,omitempty"`
	Replica *ReplicaStatus `protobuf:"bytes,15,opt,name=replica,proto3" json:"replica,omitempty"`
}

func (x *ServerStatus) Reset() {
	*x = ServerStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_honu_v1_honu_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerStatus) ProtoMessage() {}

func (x *ServerStatus) ProtoReflect() protoreflect.Message {
	mi := &file_honu_v1_honu_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerStatus.ProtoReflect.Descriptor instead.
func (*ServerStatus) Descriptor() ([]byte, []int) {
	return file_honu_v1_honu_proto_rawDescGZIP(), []int{16}
}

func (x *ServerStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ServerStatus) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ServerStatus) GetUptime() string {
	if x != nil {
		return x.Uptime
	}
	return ""
}

func (x *ServerStatus) GetReplica() *ReplicaStatus {
	if x != nil {
		return x.Replica
	}
	return nil
}

type ReplicaStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled  bool   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Pid      uint64 `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	Region   string `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	Name     string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Interval string `protobuf:"bytes,5,opt,name=interval,proto3" json:"interval,omitempty"`
	Sigma    string `protobuf:"bytes,6,opt,name=sigma,proto3" json:"sigma,omitempty"`
}

func (x *ReplicaStatus) Reset() {
	*x = ReplicaStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_honu_v1_honu_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicaStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicaStatus) ProtoMessage() {}

func (x *ReplicaStatus) ProtoReflect() protoreflect.Message {
	mi := &file_honu_v1_honu_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicaStatus.ProtoReflect.Descriptor instead.
func (*ReplicaStatus) Descriptor() ([]byte, []int) {
	return file_honu_v1_honu_proto_rawDescGZIP(), []int{17}
}

func (x *ReplicaStatus) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ReplicaStatus) GetPid() uint64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *ReplicaStatus) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ReplicaStatus) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReplicaStatus) GetInterval() string {
	if x != nil {
		return x.Interval
	}
	return ""
}

func (x *ReplicaStatus) GetSigma() string {
	if x != nil {
		return x.Sigma
	}
	return ""
}

// Options conditions all accesses to trtl, e.g. there are not different structs for
// Get vs Put options. The semantics of each option depends on the type of request.
type Options struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnMeta   bool   `protobuf:"varint,1,opt,name=return_meta,json=returnMeta,proto3" json:"return_meta,omitempty"`         // generally, return the version information for the object in the response
	IterNoKeys   bool   `protobuf:"varint,2,opt,name=iter_no_keys,json=iterNoKeys,proto3" json:"iter_no_keys,omitempty"`       // do not include keys in an Iter or Cursor response, to reduce data transfer load
	IterNoValues bool   `protobuf:"varint,3,opt,name=iter_no_values,json=iterNoValues,proto3" json:"iter_no_values,omitempty"` // do not include values in an Iter or Cursor response, to reduce data transfer load
	PageToken    string `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`             // specify the page token to fetch the next page of results
	PageSize     int32  `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`               // specify the number of results per page, cannot change between page requests
}

func (x *Options) Reset() {
	*x = Options{}
	if protoimpl.UnsafeEnabled {
		mi := &file_honu_v1_honu_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Options) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Options) ProtoMessage() {}

func (x *Options) ProtoReflect() protoreflect.Message {
	mi := &file_honu_v1_honu_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Options.ProtoReflect.Descriptor instead.
func (*Options) Descriptor() ([]byte, []int) {
	return file_honu_v1_honu_proto_rawDescGZIP(), []int{18}
}

func (x *Options) GetReturnMeta() bool {
	if x != nil {
		return x.ReturnMeta
	}
	return false
}

func (x *Options) GetIterNoKeys() bool {
	if x != nil {
		return x.IterNoKeys
	}
	return false
}

func (x *Options) GetIterNoValues() bool {
	if x != nil {
		return x.IterNoValues
	}
	return false
}

func (x *Options) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *Options) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// A key/value pair that is returned in Iter and Cursor requests
type KVPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key       []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value     []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Namespace string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Meta      *Meta  `protobuf:"bytes,4,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *KVPair) Reset() {
	*x = KVPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_honu_v1_honu_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KVPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KVPair) ProtoMessage() {}

func (x *KVPair) ProtoReflect() protoreflect.Message {
	mi := &file_honu_v1_honu_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KVPair.ProtoReflect.Descriptor instead.
func (*KVPair) Descriptor() ([]byte, []int) {
	return file_honu_v1_honu_proto_rawDescGZIP(), []int{19}
}

func (x *KVPair) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *KVPair) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *KVPair) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *KVPair) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

// Meta is a simplified representation of the honu.object.v1.Object metadata that trtl
// actually stores. The simplification is intended to return non-nested data version
// information to the user in a read-only fashion.
type Meta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key       []byte   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`             // the key that the metadata describes
	Namespace string   `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"` // a unique namespace of the key, usually a prefix
	Region    string   `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`       // the region in which the data originated
	Owner     string   `protobuf:"bytes,4,opt,name=owner,proto3" json:"owner,omitempty"`         // the name of the replica where the data originated
	Version   *Version `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`     // the current conflict-free version of the data
	Parent    *Version `protobuf:"bytes,6,opt,name=parent,proto3" json:"parent,omitempty"`       // the version the current data was was derived from
}

func (x *Meta) Reset() {
	*x = Meta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_honu_v1_honu_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Meta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Meta) ProtoMessage() {}

func (x *Meta) ProtoReflect() protoreflect.Message {
	mi := &file_honu_v1_honu_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Meta.ProtoReflect.Descriptor instead.
func (*Meta) Descriptor() ([]byte, []int) {
	return file_honu_v1_honu_proto_rawDescGZIP(), []int{20}
}

func (x *Meta) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *Meta) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Meta) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Meta) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *Meta) GetVersion() *Version {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *Meta) GetParent() *Version {
	if x != nil {
		return x.Parent
	}
	return nil
}

type Version struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid     uint64 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`         // process id, used for conflict-free version comparisons
	Version uint64 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"` // a monotonically increasing scalar that describes changes in the record
	Region  string `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`    // the region where the version originated
}

func (x *Version) Reset() {
	*x = Version{}
	if protoimpl.UnsafeEnabled {
		mi := &file_honu_v1_honu_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Version) ProtoMessage() {}

func (x *Version) ProtoReflect() protoreflect.Message {
	mi := &file_honu_v1_honu_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Version.ProtoReflect.Descriptor instead.
func (*Version) Descriptor() ([]byte, []int) {
	return file_honu_v1_honu_proto_rawDescGZIP(), []int{21}
}

func (x *Version) GetPid() uint64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *Version) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Version) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type BatchReply_Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *BatchReply_Error) Reset() {
	*x = BatchReply_Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_honu_v1_honu_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchReply_Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchReply_Error) ProtoMessage() {}

func (x *BatchReply_Error) ProtoReflect() protoreflect.Message {
	mi := &file_honu_v1_honu_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchReply_Error.ProtoReflect.Descriptor instead.
func (*BatchReply_Error) Descriptor() ([]byte, []int) {
	return file_honu_v1_honu_proto_rawDescGZIP(), []int{9, 0}
}

func (x *BatchReply_Error) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BatchReply_Error) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_honu_v1_honu_proto protoreflect.FileDescriptor

var file_honu_v1_honu_proto_rawDesc = []byte{
	0x0a, 0x12, 0x68, 0x6f, 0x6e, 0x75, 0x2f, 0x76, 0x31, 0x2f, 0x68, 0x6f, 0x6e, 0x75, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x68, 0x6f, 0x6e, 0x75, 0x2e, 0x76, 0x31, 0x22, 0x68, 0x0a,
	0x0a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x68,
	0x6f, 0x6e, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x43, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x6d, 0x65, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x68, 0x6f, 0x6e, 0x75, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0x7e, 0x0a, 0x0a,
	0x50, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x2a, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x68, 0x6f, 0x6e, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x47, 0x0a, 0x08,
	0x50, 0x75, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x21, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x68, 0x6f, 0x6e, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52,
	0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0x6b, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x68, 0x6f, 0x6e, 0x75, 0x2e, 0x76,
	0x31, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x4a, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x68, 0x6f, 0x6e, 0x75,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0x6f,
	0x0a, 0x0b, 0x49, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x68, 0x6f, 0x6e, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x5c, 0x0a, 0x09, 0x49, 0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x68,
	0x6f, 0x6e, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x56, 0x50, 0x61, 0x69, 0x72, 0x52, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x84, 0x01,
	0x0a, 0x0c, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27,
	0x0a, 0x03, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x68, 0x6f,
	0x6e, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x03, 0x70, 0x75, 0x74, 0x12, 0x30, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x6f, 0x6e, 0x75, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0xc6, 0x01, 0x0a, 0x0a, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x66, 0x75, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x31, 0x0a, 0x06, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x68, 0x6f,
	0x6e, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x1a, 0x2d,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x8c, 0x01,
	0x0a, 0x0d, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65, 0x65, 0x6b, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x73, 0x65, 0x65, 0x6b, 0x4b,
	0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x2a, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x68, 0x6f, 0x6e, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xd8, 0x01, 0x0a,
	0x0b, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x03,
	0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x68, 0x6f, 0x6e, 0x75,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x03, 0x67, 0x65, 0x74, 0x12, 0x27, 0x0a, 0x03, 0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x68, 0x6f, 0x6e, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x03, 0x70, 0x75, 0x74, 0x12, 0x30,
	0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x68, 0x6f, 0x6e, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x2a, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x68, 0x6f, 0x6e, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x04, 0x69, 0x74, 0x65, 0x72, 0x42, 0x09, 0x0a, 0x07,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xfc, 0x01, 0x0a, 0x09, 0x53, 0x79, 0x6e, 0x63,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x03, 0x67, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x68, 0x6f, 0x6e, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x48, 0x00, 0x52, 0x03, 0x67, 0x65, 0x74, 0x12, 0x25, 0x0a, 0x03,
	0x70, 0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x68, 0x6f, 0x6e, 0x75,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x48, 0x00, 0x52, 0x03,
	0x70, 0x75, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x68, 0x6f, 0x6e, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x48, 0x00, 0x52, 0x06, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x68, 0x6f, 0x6e, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x48, 0x00, 0x52, 0x04, 0x69, 0x74, 0x65, 0x72, 0x42, 0x07, 0x0a,
	0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x5f, 0x0a, 0x0c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x65, 0x65, 0x6b, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x73, 0x65, 0x65, 0x6b, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x66, 0x0a, 0x0a, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22,
	0x0d, 0x0a, 0x0b, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x22, 0x8a,
	0x01, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x72, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x6f, 0x6e,
	0x75, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x22, 0x99, 0x01, 0x0a, 0x0d,
	0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x69, 0x67, 0x6d, 0x61, 0x22, 0xae, 0x01, 0x0a, 0x07, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x6d, 0x65,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x4d, 0x65, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x5f,
	0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x72,
	0x4e, 0x6f, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x74, 0x65, 0x72, 0x5f, 0x6e,
	0x6f, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x69, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x71, 0x0a, 0x06, 0x4b, 0x56, 0x50, 0x61,
	0x69, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x68, 0x6f, 0x6e, 0x75, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0xba, 0x01, 0x0a, 0x04,
	0x4d, 0x65, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x12, 0x2a, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x68, 0x6f, 0x6e, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x68, 0x6f, 0x6e, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x4d, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x32, 0xee, 0x03, 0x0a, 0x04, 0x48, 0x6f, 0x6e, 0x75,
	0x12, 0x2f, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x13, 0x2e, 0x68, 0x6f, 0x6e, 0x75, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x68,
	0x6f, 0x6e, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x2f, 0x0a, 0x03, 0x50, 0x75, 0x74, 0x12, 0x13, 0x2e, 0x68, 0x6f, 0x6e, 0x75, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e,
	0x68, 0x6f, 0x6e, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x38, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x68,
	0x6f, 0x6e, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x68, 0x6f, 0x6e, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x04,
	0x49, 0x74, 0x65, 0x72, 0x12, 0x14, 0x2e, 0x68, 0x6f, 0x6e, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x68, 0x6f, 0x6e,
	0x75, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x37, 0x0a, 0x05, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x15, 0x2e, 0x68, 0x6f, 0x6e, 0x75,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x13, 0x2e, 0x68, 0x6f, 0x6e, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x28, 0x01, 0x12, 0x35, 0x0a, 0x06, 0x43, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x12, 0x16, 0x2e, 0x68, 0x6f, 0x6e, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75,
	0x72, 0x73, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x68, 0x6f,
	0x6e, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x56, 0x50, 0x61, 0x69, 0x72, 0x22, 0x00, 0x30, 0x01,
	0x12, 0x36, 0x0a, 0x04, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x14, 0x2e, 0x68, 0x6f, 0x6e, 0x75, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12,
	0x2e, 0x68, 0x6f, 0x6e, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x35, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x15, 0x2e, 0x68, 0x6f, 0x6e, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x68, 0x6f, 0x6e, 0x75, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x37, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x2e, 0x68, 0x6f, 0x6e, 0x75,
	0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x1a,
	0x15, 0x2e, 0x68, 0x6f, 0x6e, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x42, 0x22, 0x5a, 0x20, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x69, 0x6f, 0x2f, 0x68, 0x6f, 0x6e, 0x75, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_honu_v1_honu_proto_rawDescOnce sync.Once
	file_honu_v1_honu_proto_rawDescData = file_honu_v1_honu_proto_rawDesc
)

func file_honu_v1_honu_proto_rawDescGZIP() []byte {
	file_honu_v1_honu_proto_rawDescOnce.Do(func() {
		file_honu_v1_honu_proto_rawDescData = protoimpl.X.CompressGZIP(file_honu_v1_honu_proto_rawDescData)
	})
	return file_honu_v1_honu_proto_rawDescData
}

var file_honu_v1_honu_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_honu_v1_honu_proto_goTypes = []interface{}{
	(*GetRequest)(nil),       // 0: honu.v1.GetRequest
	(*GetReply)(nil),         // 1: honu.v1.GetReply
	(*PutRequest)(nil),       // 2: honu.v1.PutRequest
	(*PutReply)(nil),         // 3: honu.v1.PutReply
	(*DeleteRequest)(nil),    // 4: honu.v1.DeleteRequest
	(*DeleteReply)(nil),      // 5: honu.v1.DeleteReply
	(*IterRequest)(nil),      // 6: honu.v1.IterRequest
	(*IterReply)(nil),        // 7: honu.v1.IterReply
	(*BatchRequest)(nil),     // 8: honu.v1.BatchRequest
	(*BatchReply)(nil),       // 9: honu.v1.BatchReply
	(*CursorRequest)(nil),    // 10: honu.v1.CursorRequest
	(*SyncRequest)(nil),      // 11: honu.v1.SyncRequest
	(*SyncReply)(nil),        // 12: honu.v1.SyncReply
	(*CountRequest)(nil),     // 13: honu.v1.CountRequest
	(*CountReply)(nil),       // 14: honu.v1.CountReply
	(*HealthCheck)(nil),      // 15: honu.v1.HealthCheck
	(*ServerStatus)(nil),     // 16: honu.v1.ServerStatus
	(*ReplicaStatus)(nil),    // 17: honu.v1.ReplicaStatus
	(*Options)(nil),          // 18: honu.v1.Options
	(*KVPair)(nil),           // 19: honu.v1.KVPair
	(*Meta)(nil),             // 20: honu.v1.Meta
	(*Version)(nil),          // 21: honu.v1.Version
	(*BatchReply_Error)(nil), // 22: honu.v1.BatchReply.Error
}
var file_honu_v1_honu_proto_depIdxs = []int32{
	18, // 0: honu.v1.GetRequest.options:type_name -> honu.v1.Options
	20, // 1: honu.v1.GetReply.meta:type_name -> honu.v1.Meta
	18, // 2: honu.v1.PutRequest.options:type_name -> honu.v1.Options
	20, // 3: honu.v1.PutReply.meta:type_name -> honu.v1.Meta
	18, // 4: honu.v1.DeleteRequest.options:type_name -> honu.v1.Options
	20, // 5: honu.v1.DeleteReply.meta:type_name -> honu.v1.Meta
	18, // 6: honu.v1.IterRequest.options:type_name -> honu.v1.Options
	19, // 7: honu.v1.IterReply.values:type_name -> honu.v1.KVPair
	2,  // 8: honu.v1.BatchRequest.put:type_name -> honu.v1.PutRequest
	4,  // 9: honu.v1.BatchRequest.delete:type_name -> honu.v1.DeleteRequest
	22, // 10: honu.v1.BatchReply.errors:type_name -> honu.v1.BatchReply.Error
	18, // 11: honu.v1.CursorRequest.options:type_name -> honu.v1.Options
	0,  // 12: honu.v1.SyncRequest.get:type_name -> honu.v1.GetRequest
	2,  // 13: honu.v1.SyncRequest.put:type_name -> honu.v1.PutRequest
	4,  // 14: honu.v1.SyncRequest.delete:type_name -> honu.v1.DeleteRequest
	6,  // 15: honu.v1.SyncRequest.iter:type_name -> honu.v1.IterRequest
	1,  // 16: honu.v1.SyncReply.get:type_name -> honu.v1.GetReply
	3,  // 17: honu.v1.SyncReply.put:type_name -> honu.v1.PutReply
	5,  // 18: honu.v1.SyncReply.delete:type_name -> honu.v1.DeleteReply
	7,  // 19: honu.v1.SyncReply.iter:type_name -> honu.v1.IterReply
	17, // 20: honu.v1.ServerStatus.replica:type_name -> honu.v1.ReplicaStatus
	20, // 21: honu.v1.KVPair.meta:type_name -> honu.v1.Meta
	21, // 22: honu.v1.Meta.version:type_name -> honu.v1.Version
	21, // 23: honu.v1.Meta.parent:type_name -> honu.v1.Version
	0,  // 24: honu.v1.Honu.Get:input_type -> honu.v1.GetRequest
	2,  // 25: honu.v1.Honu.Put:input_type -> honu.v1.PutRequest
	4,  // 26: honu.v1.Honu.Delete:input_type -> honu.v1.DeleteRequest
	6,  // 27: honu.v1.Honu.Iter:input_type -> honu.v1.IterRequest
	8,  // 28: honu.v1.Honu.Batch:input_type -> honu.v1.BatchRequest
	10, // 29: honu.v1.Honu.Cursor:input_type -> honu.v1.CursorRequest
	11, // 30: honu.v1.Honu.Sync:input_type -> honu.v1.SyncRequest
	13, // 31: honu.v1.Honu.Count:input_type -> honu.v1.CountRequest
	15, // 32: honu.v1.Honu.Status:input_type -> honu.v1.HealthCheck
	1,  // 33: honu.v1.Honu.Get:output_type -> honu.v1.GetReply
	3,  // 34: honu.v1.Honu.Put:output_type -> honu.v1.PutReply
	5,  // 35: honu.v1.Honu.Delete:output_type -> honu.v1.DeleteReply
	7,  // 36: honu.v1.Honu.Iter:output_type -> honu.v1.IterReply
	9,  // 37: honu.v1.Honu.Batch:output_type -> honu.v1.BatchReply
	19, // 38: honu.v1.Honu.Cursor:output_type -> honu.v1.KVPair
	12, // 39: honu.v1.Honu.Sync:output_type -> honu.v1.SyncReply
	14, // 40: honu.v1.Honu.Count:output_type -> honu.v1.CountReply
	16, // 41: honu.v1.Honu.Status:output_type -> honu.v1.ServerStatus
	33, // [33:42] is the sub-list for method output_type
	24, // [24:33] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_honu_v1_honu_proto_init() }
func file_honu_v1_honu_proto_init() {
	if File_honu_v1_honu_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_honu_v1_honu_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_honu_v1_honu_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_honu_v1_honu_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_honu_v1_honu_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_honu_v1_honu_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_honu_v1_honu_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_honu_v1_honu_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_honu_v1_honu_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IterReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_honu_v1_honu_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_honu_v1_honu_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_honu_v1_honu_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CursorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_honu_v1_honu_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_honu_v1_honu_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_honu_v1_honu_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_honu_v1_honu_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_honu_v1_honu_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthCheck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_honu_v1_honu_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_honu_v1_honu_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicaStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_honu_v1_honu_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Options); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_honu_v1_honu_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KVPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_honu_v1_honu_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Meta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_honu_v1_honu_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Version); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_honu_v1_honu_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchReply_Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_honu_v1_honu_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*BatchRequest_Put)(nil),
		(*BatchRequest_Delete)(nil),
	}
	file_honu_v1_honu_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*SyncRequest_Get)(nil),
		(*SyncRequest_Put)(nil),
		(*SyncRequest_Delete)(nil),
		(*SyncRequest_Iter)(nil),
	}
	file_honu_v1_honu_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*SyncReply_Get)(nil),
		(*SyncReply_Put)(nil),
		(*SyncReply_Delete)(nil),
		(*SyncReply_Iter)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_honu_v1_honu_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_honu_v1_honu_proto_goTypes,
		DependencyIndexes: file_honu_v1_honu_proto_depIdxs,
		MessageInfos:      file_honu_v1_honu_proto_msgTypes,
	}.Build()
	File_honu_v1_honu_proto = out.File
	file_honu_v1_honu_proto_rawDesc = nil
	file_honu_v1_honu_proto_goTypes = nil
	file_honu_v1_honu_proto_depIdxs = nil
}
